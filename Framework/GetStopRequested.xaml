<Activity mc:Ignorable="sap sap2010" x:Class="GetStopRequested" this:GetStopRequested.in_Reference="Unit Testing: " this:GetStopRequested.in_RunMode="Unit" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Settings" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="out_StopRequested" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_Reference" Type="InArgument(x:String)" />
    <x:Property Name="in_RunMode" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1737,1735</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Terminal</x:String>
      <x:String>UiPath.Terminal.Service</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="31">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Terminal</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get Stop Requested" sap:VirtualizedContainerService.HintSize="562,1570" sap2010:WorkflowViewState.IdRef="Sequence_29">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="activityName">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">Framework.GetStopRequested</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="s:DateTime" Name="maintenanceEnd" />
      <Variable x:TypeArguments="s:DateTime" Name="maintenanceStart" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[in_RunMode]" sap:VirtualizedContainerService.HintSize="520,388" sap2010:WorkflowViewState.IdRef="Switch`1_1">
      <Sequence x:Key="Unit" DisplayName="Initialize Unit Run" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_30">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ReadConfigFile workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadConfigFile.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">
              <Literal x:TypeArguments="x:String">C:\Users\eyash\Documents\UiPath\GLamework\Config\Config.json</Literal>
            </InArgument>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Assets" />
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Settings">
              <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="in_Settings" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Credentials" />
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:Exception)" x:Key="out_SystemExceptions" />
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, ui:BusinessRuleException)" x:Key="out_BusinessExceptions" />
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </Sequence>
    </Switch>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="520,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:DateTime">[maintenanceStart]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:DateTime">[new DateTime(Now.Year, Now.Month, Now.Day, Cint(in_settings("framework.maintenanceStart").Split(":"c)(0)), Cint(in_settings("framework.maintenanceStart").Split(":"c)(1)), Cint(in_settings("framework.maintenanceStart").Split(":"c)(2)))]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:DateTime">[maintenanceEnd]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:DateTime">[new DateTime(Now.Year, Now.Month, Now.Day, Cint(in_settings("framework.maintenanceEnd").Split(":"c)(0)), Cint(in_settings("framework.maintenanceEnd").Split(":"c)(1)), Cint(in_settings("framework.maintenanceEnd").Split(":"c)(2)))]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <Assign sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_13">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[in_Reference]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Reference.Replace(": ",".") + activityName + ": "]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="520,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[in_Reference + &quot;Starting...&quot;]" />
    <ui:RetryScope DisplayName="Get Asset Retry" sap:VirtualizedContainerService.HintSize="520,196" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[Cint(in_settings(&quot;network.retryCount.med&quot;))]" RetryInterval="[New TimeSpan(Cint(in_settings(&quot;network.retryTimeout.med&quot;).Split(&quot;:&quot;c)(0)), Cint(in_settings(&quot;network.retryTimeout.med&quot;).Split(&quot;:&quot;c)(1)), Cint(in_settings(&quot;network.retryTimeout.med&quot;).Split(&quot;:&quot;c)(2)))]">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <ui:ShouldStop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[out_StopRequested]" />
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <If Condition="[not out_StopRequested]" sap:VirtualizedContainerService.HintSize="520,414" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <If Condition="[DateTime.Compare(Now, maintenanceStart) &gt;= 0 ANDALSO DateTime.Compare(Now, maintenanceEnd) &lt; 0]" DisplayName="Check Maintenance Window" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_7">
          <If.Then>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[out_StopRequested]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
      </If.Then>
    </If>
  </Sequence>
</Activity>