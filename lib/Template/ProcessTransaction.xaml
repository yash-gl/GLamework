<Activity mc:Ignorable="sap sap2010" x:Class="Step1" this:Step1.in_Reference="Template" this:Step1.in_RunMode="Unit" this:Step1.error_TestSystemException="Testing System Exception Handling" this:Step1.error_TestBusinessException="Testing Business Exception Handling" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="String to place at the beginning of every log message for traceability in logs." Name="in_Reference" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Use and update variables used in your process in 1 handy dictionary" Name="io_Data" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="'Unit' is used to initialize the unit state before running. Use empty strings for no pre-steps." Name="in_RunMode" Type="InArgument(x:String)" />
    <x:Property Name="error_TestSystemException" Type="InArgument(x:String)" />
    <x:Property Name="error_TestBusinessException" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1809.33333333333,1680</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Step1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="@TestCase&#xA;@ID: Successful&#xA;@Description: Performs actions successfully on the transaction&#xA;@Preconditions:&#xA;1) io_Data has all necessary data&#xA;@Postconditions:&#xA;1) Transaction completed successfully&#xA;&#xA;@TestCase&#xA;@ID: SystemException&#xA;@Description: Encounters system exception on the transaction&#xA;@Preconditions:&#xA;1) io_Data has all necessary data&#xA;@Postconditions:&#xA;1) Throws error_TestSystemException&#xD;&#xA;&#xD;&#xA;@TestCase&#xD;&#xA;@ID: BusinessException&#xD;&#xA;@Description: Encounters business exception on the transaction&#xD;&#xA;@Preconditions:&#xA;1) io_Data has all necessary data&#xA;@Postconditions:&#xA;1) Throws error_TestBusinessException" DisplayName="_.ProcessTransaction" sap:VirtualizedContainerService.HintSize="538.666666666667,1615.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Framework.CloseApplications" Name="ActivityName" />
      <Variable x:TypeArguments="x:String" Name="screenshotPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateActivityName workflow" sap:VirtualizedContainerService.HintSize="496.666666666667,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="lib\Utility\UpdateActivityName.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="x:String" x:Key="ActivityName">[ActivityName]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Reference">[in_Reference]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="LM: Start" sap:VirtualizedContainerService.HintSize="496.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[ActivityName + &quot;: Starting&quot;]" />
    <Switch x:TypeArguments="x:String" DisplayName="Initialize" Expression="[in_RunMode.ToLower.Trim]" sap:VirtualizedContainerService.HintSize="496.666666666667,581.333333333333" sap2010:WorkflowViewState.IdRef="Switch`1_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence x:Key="Unit" DisplayName="Unit Initialization" sap:VirtualizedContainerService.HintSize="376,343.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_9">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Default="Data\Config.xlsx" Name="ConfigPath" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ReadConfigFile workflow" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="lib\Framework\ReadConfigFile.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">
              <Literal x:TypeArguments="x:String">C:\Users\eyash\Documents\UiPath\GLamework\Config\Config.xlsx</Literal>
            </InArgument>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Assets" />
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Settings" />
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Credentials" />
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_SystemExceptions" />
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_BusinessExceptions" />
            <InArgument x:TypeArguments="x:String" x:Key="in_Reference" />
            <InArgument x:TypeArguments="x:String" x:Key="in_RunMode" />
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,97.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[io_Data]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <Throw x:Key="SystemException" DisplayName="TestSystemException" Exception="[new System.Exception(ActivityName + &quot;: &quot; + error_TestSystemException)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      <Throw x:Key="BusinessException" DisplayName="TestBusinessException" Exception="[new BusinessRuleException(ActivityName + &quot;: &quot; + error_TestBusinessException)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
    </Switch>
    <Flowchart sap2010:Annotation.AnnotationText="Annotation" DisplayName="Steps" sap:VirtualizedContainerService.HintSize="496.666666666667,83.3333333333333" sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
          <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart.StartNode>
        <x:Null />
      </Flowchart.StartNode>
    </Flowchart>
    <ui:LogMessage DisplayName="LM: Complete" sap:VirtualizedContainerService.HintSize="496.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[ActivityName + &quot;: Finished processing &quot;]" />
  </Sequence>
</Activity>